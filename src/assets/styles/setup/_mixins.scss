@use "sass:color";
/* Breakpoint mixins */

@mixin fold-animation {
  & .fold {
    display: block;
    height: 0px;
    position: absolute;
    right: 0px;
    top: 0px;
    width: 0px;
    background: rgba(0, 0, 0, 0.353);
    border-color: transparent rgb(255, 255, 255);
    border-style: solid;
    border-width: 0px;
    transition: border-width 0.2s ease-out;
  }

  &:hover .fold {
    transition-delay: 0.2s;
    border-width: 0px 10px 10px 0px;
  }
}

@mixin dialog-options-button($color) {
  background-color: $color;
  color: white;

  &:hover {
    background-color: color.adjust($color, $lightness: 4%);
  }
}

@mixin button-with-icon {
  display: flex;
  align-items: center;
  gap: 8px;
}

@mixin for-mobile-layout {
  @media (max-width: calc($mobile-breakpoint + 40px)) {
    @content;
  }
}

@mixin for-narrow-layout {
  @media (min-width: calc($mobile-breakpoint + 40px)) {
    @content;
  }
}

@mixin for-normal-layout {
  @media (min-width: calc($narrow-breakpoint + 40px)) {
    @content;
  }
}

@mixin for-wide-layout {
  @media (min-width: calc($normal-breakpoint + 40px)) {
    @content;
  }
}

/* Media  Mixins */
@mixin aspect-ratio($width, $height) {
  position: relative;
  overflow: hidden;
  &::before {
    display: block;
    content: "";
    width: 100%;
    padding-top: calc(($height / $width) * 100%);
  }
  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  > img {
    height: 100%;
    object-fit: cover;
  }
}

// Mixin for removing hover efects on iphone screen
@mixin hover-supported {
  @media not all and (pointer: coarse) {
    &:hover {
      @content;
    }
  }
}
